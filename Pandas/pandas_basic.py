import pandas as pd

# --- Создание DataFrame ---
# DataFrame можно создать из словаря, где ключи - это названия столбцов,
# а значения - это списки данных для каждого столбца.
data = {
    'Имя': ['Анна', 'Борис', 'Виктория', 'Григорий', 'Дарья'],
    'Возраст': [25, 30, 22, 35, 28],
    'Город': ['Москва', 'Санкт-Петербург', 'Москва', 'Казань', 'Санкт-Петербург']
}
df = pd.DataFrame(data)

print("Исходный DataFrame:")
print(df)
print("-" * 30)

# --- Просмотр данных ---
# Показать первые 3 строки
print("\nПервые 3 строки:")
print(df.head(3))
print("-" * 30)

# Показать последние 2 строки
print("\nПоследние 2 строки:")
print(df.tail(2))
print("-" * 30)

# Получить информацию о DataFrame (типы данных, количество непустых значений)
print("\nИнформация о DataFrame:")
df.info()
print("-" * 30)

# Получить базовую статистику по числовым столбцам
print("\nБазовая статистика:")
print(df.describe())
print("-" * 30)

# --- Выбор данных (индексация) ---
# Выбрать один столбец (возвращает Series)
print("\nСтолбец 'Имя':")
print(df['Имя'])
print("-" * 30)

# Выбрать несколько столбцов (возвращает DataFrame)
print("\nСтолбцы 'Имя' и 'Возраст':")
print(df[['Имя', 'Возраст']])
print("-" * 30)

# Выбрать строки по индексу (например, первая строка)
print("\nСтрока с индексом 0:")
print(df.loc[0]) # .loc для выбора по меткам (индексам)
print("-" * 30)

# Выбрать строки по числовому положению (например, первая и вторая строка)
print("\nСтроки с индексами 0 и 1 (с использованием iloc):")
print(df.iloc[0:2]) # .iloc для выбора по числовому положению
print("-" * 30)

# --- Фильтрация данных ---
# Выбрать всех людей старше 27 лет
print("\nЛюди старше 27 лет:")
print(df[df['Возраст'] > 27])
print("-" * 30)

# Выбрать людей из Москвы
print("\nЛюди из Москвы:")
print(df[df['Город'] == 'Москва'])
print("-" * 30)

# Выбрать людей из Москвы И старше 25 лет
print("\nЛюди из Москвы и старше 25 лет:")
print(df[(df['Город'] == 'Москва') & (df['Возраст'] > 25)])
print("-" * 30)

# --- Добавление/Изменение столбцов ---
# Добавить новый столбец 'Пол'
df['Пол'] = ['Ж', 'М', 'Ж', 'М', 'Ж']
print("\nDataFrame с новым столбцом 'Пол':")
print(df)
print("-" * 30)

# Изменить значения в существующем столбце (например, возраст Анны)
df.loc[0, 'Возраст'] = 26
print("\nИзмененный возраст Анны:")
print(df)
print("-" * 30)

# --- Удаление данных ---
# Удалить столбец 'Город' (axis=1 означает столбец, inplace=True изменяет DataFrame на месте)
df_without_city = df.drop('Город', axis=1)
print("\nDataFrame без столбца 'Город':")
print(df_without_city)
print("-" * 30)

# Удалить строку с индексом 3
df_without_row = df.drop(3, axis=0)
print("\nDataFrame без строки с индексом 3:")
print(df_without_row)
print("-" * 30)

# --- Группировка данных ---
# Посчитать средний возраст по городам
print("\nСредний возраст по городам:")
print(df.groupby('Город')['Возраст'].mean())
print("-" * 30)

# Посчитать количество людей по городам
print("\nКоличество людей по городам:")
print(df.groupby('Город')['Имя'].count())
print("-" * 30)

# --- Сортировка данных ---
# Сортировать по возрасту по возрастанию
print("\nОтсортированный по возрасту (по возрастанию):")
print(df.sort_values(by='Возраст'))
print("-" * 30)

# Сортировать по возрасту по убыванию
print("\nОтсортированный по возрасту (по убыванию):")
print(df.sort_values(by='Возраст', ascending=False))
print("-" * 30)

# --- Запись в файл ---
# Записать DataFrame в CSV-файл
# df.to_csv('my_data.csv', index=False) # index=False чтобы не записывать индекс как отдельный столбец
# print("\nDataFrame сохранен в 'my_data.csv'")

# --- Чтение из файла ---
# Прочитать DataFrame из CSV-файла
# loaded_df = pd.read_csv('my_data.csv')
# print("\nЗагруженный DataFrame из 'my_data.csv':")
# print(loaded_df)