import graphviz,os


# Configuration
FILE_NAME='lightgreen_simplified_LR_short_text'
FILE_PATH=os.path.join('Graphvis', FILE_NAME)

# Формат: (ID, Текст работы, Уровень в иерархии)
wbs_items = [
    ('1', 'Инициация проекта', 1),
    ('1.1', 'Анализ предметной области', 2),
    ('1.1.1', 'Анализ текущих диагностических процессов', 3), 
    ('1.1.3', 'Определение актуальности и потребностей', 3), 
    ('1.2', 'Определение целей и требований', 2), 
    ('1.2.1', 'Формулирование бизнес-целей', 3), 
    ('1.2.2', 'Сбор и анализ функциональных требований', 3), 
    ('1.5', 'Составление ТЗ / Устава проекта', 2), 

    ('2', 'Планирование проекта', 1),
    ('2.1', 'Детализация и описание работ', 2),
    ('2.4', 'Определение ресурсов', 2), 
    ('2.4.1', 'Потребность в команде', 3), 
    ('2.4.4', 'Формирование бюджета', 3), 
    ('2.5', 'Разработка графика (Диаграмма Ганта)', 2), 
    ('2.6', 'Анализ рисков и стратегии реагирования', 2), 
    ('2.10', 'Разработка плана управления', 2), 

    ('3', 'Реализация проекта', 1),
    ('3.1', 'Создание инфраструктуры', 2), 
    ('3.1.1', 'Требования к оборудованию', 3), 
    ('3.1.4', 'Настройка ПО для ИИ', 3), 
    ('3.1.5', 'Развертывание ИИ-модели', 3), 
    ('3.2', 'Разработка модулей системы', 2), 
    ('3.2.1', 'Разработка модуля данных', 3), 
    ('3.2.4', 'Разработка Frontend', 3), 
    ('3.3', 'Разработка ИИ-компонентов', 2), 
    ('3.3.1', 'Выбор ИИ-модели (T5-large)', 3), 
    ('3.3.4', 'Разработка промптов', 3), 
    ('3.3.5', 'Настройка вывода', 3), 

    ('4', 'Оценка, тест-завершение проекта', 1), 
    ('4.1', 'Тестирование решения', 2), 
    ('4.1.1', 'Модульное тестирование', 3),
    ('4.1.3', 'Нагрузочное тестирование', 3),
    ('4.1.5', 'Клиническая валидация', 3),
    ('4.2', 'Оценка реализуемости и эффективности', 2), 
    ('4.2.1', 'Анализ соответствия ТЗ', 3), 
    ('4.2.3', 'Экономическая оценка', 3), 
    ('4.4', 'Развертывание системы', 2), 
    ('4.7', 'Завершение и отчетность', 2), 
]


max_level_to_show = 3

dot = graphviz.Digraph(comment='WBS - Intelligent Clinical Decision Support System (Short Descriptions)', format='png')

# Глобальные настройки графа
dot.attr(rankdir='LR') # Ориентация слева направо
dot.attr('node', shape='box', style='rounded, filled', fillcolor='lightgreen', fontsize='9') # Цвет и размер шрифта

# Фильтруем элементы по максимальному уровню
filtered_wbs_items = [item for item in wbs_items if item[2] <= max_level_to_show]

# Создаем словарь для быстрого доступа к ID существующих в отфильтрованном списке узлов
filtered_ids = {item[0] for item in filtered_wbs_items}

# Добавление узлов и связей только для отфильтрованных элементов
for item_id, item_text, item_level in filtered_wbs_items:
    # Добавляем узел
    # Используем сокращенный текст
    dot.node(item_id, f'{item_id}\n{item_text}', fontsize='8', width='2', fixedsize='true')


    # Определяем родителя
    if item_level > 1:
        parent_id_parts = item_id.split('.')
        parent_id = ".".join(parent_id_parts[:-1])

        # Добавляем связь, только если и родительский узел находится в отфильтрованном списке
        if parent_id in filtered_ids:
             dot.edge(parent_id, item_id)

# Сохраняет исходный файл .gv и рендерит в выбранный формат
dot.render(FILE_PATH, view=True, cleanup=True) # Имя файла обновлено

print(f"Диаграмма ИСР (уровень {max_level_to_show}")